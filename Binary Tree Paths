class Solution
{
    public:
    vector<string> ans;
	//helper function
    void helper(TreeNode *root, string s)
    {
       	// base case
        if (root == NULL)
        {
            return;
        }
		
		// condition hits
        if (root->left == NULL && root->right == NULL)
        {
            s += to_string(root->val);	// this last node should also be included 
            ans.push_back(s);
            return;
        }
 
        s += to_string(root->val) + "->";

        helper(root->left, s);
        helper(root->right, s);
    }

    vector<string> binaryTreePaths(TreeNode *root)
    {
        string s = ""; 
        helper(root, s);
        return ans;
    }
};
