class Solution 
{
public:
    bool isPossible(string x)
    {
        if(x.size()==1)
        {
            int num = x[0]-'0';
            return num>=1 and num<=9;
        }
        else if(x.size()==2)
        {
            if(x[0]=='0')
            {
                return false;
            }
            if(x[0]=='0' and x[1]=='0')
            {
                return false;
            }
            int num = (x[1]-'0')+(x[0]-'0')*10;
            if(num>=1 and num<=26)
            {
                return true;
            }
        }
        return false;
    }
    int numDecodings(string s)
    {
        int n = s.size();
        vector<int> dp(n,0);
        for(int i = 0;i<n;i++)
        {
            if((s[i]-'0')>=1 and (s[i]-'0')<=9)
            {
                dp[i] += i>0?dp[i-1]:1;
            }
            if(i>0)
            {
                string sub = s.substr(i-1,2);
                if(isPossible(sub))
                {
                    dp[i]+= i>1?dp[i-2]:1;
                }
            }
        }
        return dp[n-1];
    }
};
