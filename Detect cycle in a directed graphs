class Solution
{
public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int v, vector<int> adj[]) 
    {
     vector<int>in(v,0);
     for(int i=0;i<v;i++)
     {
         for(auto x:adj[i])
         {
             in[x]++;
         }
     }
     queue<int>q;
     for(int i=0;i<v;i++)
     {
         if(in[i]==0) 
        q.push(i);
     }
     int c=0;
    while(!q.empty())
    {
        int node = q.front();
        q.pop();
      
        c++;
        for(auto it : adj[node])
        {
            in[it]--;
            if(in[it] == 0)
            {
                  q.push(it);
            }
        }
    }
     if(c!=v) 
        return true;
        
     return false;
    }
};
