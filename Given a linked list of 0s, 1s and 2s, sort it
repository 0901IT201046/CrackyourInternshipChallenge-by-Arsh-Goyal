class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) 
    {
        
       Node* head0 = new Node(0), *tail0 = head0;
       Node* head1 = new Node(0), *tail1 = head1;
       Node* head2 = new Node(0), *tail2 = head2;
       
       Node* curr = head;
       while(curr)
       {
          if(curr->data==0)
            {
                tail0->next = curr; 
                tail0 = tail0->next;
            }
          else if(curr->data==1)
            {
                tail1->next = curr; 
                tail1 = tail1->next;
            }
          else
            {
                tail2->next = curr; 
                tail2 = tail2->next;
            }
          curr = curr->next;    
       }
       tail0->next = head1->next? head1->next : head2->next;
       tail1->next = head2->next;
       tail2->next = NULL;
       
       return head0->next;
        
    }
};
