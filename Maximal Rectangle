class Solution {
public:
int largestRectangleInHistogram(vector<int>& heights) {    
        stack<pair<int,int>> s1;
        
        int n=heights.size();
 
        vector<int> nsl(n,-1); 
        for(int i=0;i<n;i++)
        {
            while(!s1.empty() && s1.top().second>=heights[i])
                s1.pop();
            
            if(s1.empty())
                nsl[i]=-1;
            else 
                nsl[i]=s1.top().first;
            
            s1.push({i,heights[i]});
        }
        stack<pair<int,int>> s2;
        
        vector<int> nsr(n,n);
        for(int i=n-1;i>=0;i--)
        {
            while(!s2.empty() && s2.top().second>=heights[i])
                s2.pop();
            
            if(s2.empty())
                nsr[i]=n;
            else 
                nsr[i]=s2.top().first;
            
            s2.push({i,heights[i]});
        }
        
        
        int ans=INT_MIN;
        for(int i=0;i<n;i++)
        {
            int h=heights[i];
            int w=nsr[i]-nsl[i]-1; 
            int largestArea=w*h;  
            ans=max(ans,largestArea);
        }
        return ans;
    }
    
    int maximalRectangle(vector<vector<char>>& matrix) 
    {
        int m=matrix.size();  
        int n=matrix[0].size();  
        vector<int> h(n,0);  
        
        int ans=0;
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]=='0') 
                  h[j]=0;
                else h[j]+=1;
            }
             int area=largestRectangleInHistogram(h);
             ans=max(ans,area);
        }
        return ans;
    }
};
