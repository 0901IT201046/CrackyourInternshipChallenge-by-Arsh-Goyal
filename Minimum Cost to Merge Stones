class Solution 
{
public:
    int mergeStones(vector<int>& stones, int p) 
    {
        int n=stones.size();
        if((n-1)%(p-1)!=0)
            return -1;
        
        vector<int> presum={0};
        for(int &x:stones)
            presum.push_back(presum.back()+x);
        vector<vector<int>> dp(n,vector<int>(n,1e9));
        
        for(int i=0;i<n;i++)
            dp[i][i]=0;
        
        for(int len=1;len<n;len++)
        {
            for(int i=0;i<n-len;i++)
            {
                int j=i+len;
                for(int k=i;k<j;k+=p-1)
                {
                    dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j]);
                }
                if(len%(p-1)==0)
                    dp[i][j]+=presum[j+1]-presum[i];
            }
        }
        return dp[0][n-1];
    }
};
