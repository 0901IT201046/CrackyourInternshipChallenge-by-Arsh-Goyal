class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
      vector<int>distance(V, INT_MAX);
      distance[0] = 0;
      vector<bool>visited(V, false);
      priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>>pq;
      pq.push({0, 0});
      while(!pq.empty())
      {
          int u = pq.top().second;
          pq.pop();
          visited[u] = true;
          for(auto v : adj[u])
          {
              if(visited[v[0]]==false and v[1]<distance[v[0]])
                {
                    distance[v[0]] = v[1];
                    pq.push({distance[v[0]], v[0]});
                }
          }
      }
      return accumulate(distance.begin(), distance.end(), 0);
    }
    
};
