/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) 
    {
        ListNode* fast=head;
        ListNode* slow=head;
        while ((fast!=NULL)&&(fast->next!=NULL))
        {
            slow=slow->next;
            fast=(fast->next)->next;
        }
        ListNode* end=head;
        stack<ListNode*> s;
        while (slow!=NULL)
        {
            s.push(slow);
            slow=slow->next;
        }
        while (s.empty()==0)
        {
            ListNode* ptr=s.top();
            s.pop();
            ptr->next=end->next;
            end->next=ptr;
            end=ptr->next;
        }
        end->next=NULL;
    }
};
