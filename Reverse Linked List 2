/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) 
    {
        ListNode* dummy=new ListNode(-1);
    if(head==NULL||head->next==NULL)
    {
     return head;
    }
    dummy->next=head;
      ListNode* pre=NULL;
      ListNode*temp =dummy;
       
     for(int i=0;i<left;i++)
     {
          pre=temp;
          temp=temp->next;  
      } 
      ListNode* final=temp;
      ListNode *prev=pre;
       for(int i=left;i<=right;i++)
       {
         ListNode* nxt=final->next;
          final->next=prev;
           prev=final;
           final=nxt;
       }
      pre->next=prev;
      temp->next=final;
       
    return dummy->next; 
    }
};
