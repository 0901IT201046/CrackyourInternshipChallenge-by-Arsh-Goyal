class Solution 
{
public:
    int dp[101][101];
    int uniquePaths(int m, int n) 
    {
        memset (dp,-1,sizeof dp);
        vector<pair<int,int>> temp={{0,1},{1,0}};
        return helper(temp,0,0,m, n);
    }
    
    
    int helper(vector<pair<int,int>>&temp,int curr_row, int curr_col, int row_size, int col_size)
    {
         if(curr_row==row_size-1 && curr_col==col_size-1)
            return 1;
        if(dp[curr_row][curr_col]!=-1)
            return dp[curr_row][curr_col];
        
        int ans=0;
        
        for(int i=0;i<temp.size();i++)
        {
            int r=curr_row+temp[i].first;
            int c=curr_col+temp[i].second;
            
            if(r<0 || r>=row_size || c<0 ||c>=col_size)
                continue ;

            ans+=helper(temp, r, c, row_size, col_size);
        } 
            
        return dp[curr_row][curr_col]=ans;
    }
};
