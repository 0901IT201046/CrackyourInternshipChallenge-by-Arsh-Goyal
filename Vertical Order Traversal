/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
      vector<vector<int>>ans;
        if(root==NULL){return ans;}
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        
        map<int,map<int,multiset<int>>>mpp;
        
        while(!q.empty())
        {
          TreeNode* node=q.front().first;
          int line=q.front().second.first;
          int level=q.front().second.second;
          q.pop();
          mpp[line][level].insert(node->val);
          if(node->left)
          {
              q.push({node->left,{line-1,level+1}});
          }
          if(node->right)
          {
              q.push({node->right,{line+1,level+1}});
          }
        }
        
        for(auto it:mpp)
        {
            vector<int>temp;
            for(auto i:it.second)
            {
                for(auto j:i.second)
                {
                    temp.push_back(j);
                }
            }
            ans.push_back(temp);
            
        }
        
        return ans;  
}  
    
};
